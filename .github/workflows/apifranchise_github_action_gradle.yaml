name: 'github-actions-apiFranchise'

on:
  release:
    types: [published]

jobs:
  create_environment_files:
    name: Create environment files
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Override application.yaml
        run: |
          cat <<EOT > application.yaml
          server:
            port: 8080
          spring:
            application:
              name: "apiFranchise"
            devtools:
              add-properties: false
            h2:
              console:
                enabled: true
                path: "/h2"
            profiles:
              include: null
          management:
            endpoints:
              web:
                exposure:
                  include: "health,prometheus"
            endpoint:
              health:
                probes:
                  enabled: true
          cors:
            allowed-origins: "http://localhost:4200,http://localhost:8080"
          adapters:
            r2dbc:
              host: "${{ secrets.DB_HOST }}"
              port: 5432
              database: "${{ secrets.DB_NAME }}"
              schema: "${{ secrets.DB_SCHEMA }}"
              username: "${{ secrets.DB_USERNAME }}"
              password: "${{ secrets.DB_PASSWORD }}"
          EOT

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: environment-files
          path: |
            application.yaml

  build_and_push:
    name: Build and push
    needs: create_environment_files
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: environment-files
          path: environmentsTempFiles

      - name: List directory to check
        run: ls -R | grep ":$" | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/   /' -e 's/-/|/'

      - name: Move application.yaml file
        run: mv ${PWD}/environmentsTempFiles/application.yaml ${PWD}/applications/app-service/src/main/resources/application.yaml

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Get tag number
        run: echo "Tag number -> prod-${{ github.event.release.tag_name }}"

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deployment/Dockerfile.build
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.REPOSITORY_NAME }}:prod-${{ github.event.release.tag_name }}
